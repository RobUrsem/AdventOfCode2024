package puzzle

import (
	"fmt"
	"testing"
)

func TestAntennaMap(t *testing.T) {
	testCases := []struct {
		name         string
		input        []string
		useHarmonics bool
		expected     AntennaMap
		num          int
	}{
		{
			name: "two antinodes",
			input: []string{
				"...a..a.....",
			},
			useHarmonics: false,
			expected: AntennaMap{
				"#..a..a..#..",
			},
			num: 2,
		},
		{
			name: "Using harmonics",
			input: []string{
				"T.........",
				"...T......",
				".T........",
				"..........",
				"..........",
				"..........",
				"..........",
				"..........",
				"..........",
				"..........",
			},
			useHarmonics: true,
			expected: AntennaMap{
				"#....#....",
				"...#......",
				".#....#...",
				".........#",
				"..#.......",
				"..........",
				"...#......",
				"..........",
				"....#.....",
				"..........",
			},
			num: 9,
		},
		{
			name: "overlapping with antenna A",
			input: []string{
				"..........",
				"..........",
				"..........",
				"....a.....",
				"........a.",
				".....a....",
				"..........",
				"......A...",
				"..........",
				"..........",
			},
			useHarmonics: false,
			expected: AntennaMap{
				"..........",
				"...#......",
				"#.........",
				"....a.....",
				"........a.",
				".....a....",
				"..#.......",
				"......#...",
				"..........",
				"..........",
			},
			num: 4,
		},
		{
			name: "example - top most A overlaps with antenna",
			input: []string{
				"............",
				"........0...",
				".....0......",
				".......0....",
				"....0.......",
				"......A.....",
				"............",
				"............",
				"........A...",
				".........A..",
				"............",
				"............",
			},
			useHarmonics: false,
			expected: AntennaMap{
				"......#....#",
				"...#....0...",
				"....#0....#.",
				"..#....0....",
				"....0....#..",
				".#....#.....",
				"...#........",
				"#......#....",
				"........A...",
				".........A..",
				"..........#.",
				"..........#.",
			},
			num: 14,
		},
		{
			name: "example - with Harmonics",
			input: []string{
				"............",
				"........0...",
				".....0......",
				".......0....",
				"....0.......",
				"......A.....",
				"............",
				"............",
				"........A...",
				".........A..",
				"............",
				"............",
			},
			useHarmonics: true,
			expected: AntennaMap{
				"##....#....#",
				".#.#....#...",
				"..#.##....#.",
				"..##...#....",
				"....#....#..",
				".#...##....#",
				"...#..#.....",
				"#....#.#....",
				"..#.....#...",
				"....#....#..",
				".#........#.",
				"...#......##",
			},
			num: 34,
		},
		{
			name: "Full Input",
			input: []string{
				"..........K........................A..............",
				".K................................A...............",
				"......................................D.....A.....",
				"....................................6............D",
				"..................................................",
				".............................d....................",
				".........4.e.......................DT.B...........",
				"....................d.....D......A...........B....",
				".............K....................................",
				"...........................k......................",
				"...w..............4.....................y.........",
				"........w.........................................",
				"..............g..k..............d..........y......",
				".....w.....Q..............................T.......",
				"...............b..........k................6......",
				".................................W...T............",
				"................w..............BW..T..............",
				"............g....4e.....................W.........",
				".......1.................g.......................W",
				"........k..........................6.....0........",
				".................a................................",
				"....................4.a........3.g..............7.",
				".............m........................I.0.........",
				"..............K7..............V...................",
				"....Q................................I............",
				"..9........b......................I...............",
				"...................d..............................",
				".......e..........................................",
				"....e...........t..E................3.............",
				"......1..aQ........t....v.....3..........I..0.....",
				"...........................v.t.....3.7............",
				"..........i.......m........M......................",
				"...Q..29..a...................m...................",
				"...9......q..........mt...........................",
				"....1...............Y.....M.........7.............",
				"..........b..1...E.v..Y...........................",
				"................v..........q...............0......",
				"..................E.................5.............",
				"9...i..2b................................8........",
				".....q..2............Y..M.........................",
				"............q...............................V.....",
				"...i.................................V............",
				".i..............E............M....................",
				".........................................G........",
				"............8................Y....................",
				".........2................8..............5........",
				"......................................5....V......",
				"............................................G.....",
				".....................................5...........G",
				".................................8................",
			},
			useHarmonics: false,
			expected: []string{
				"..........K......#......#..........A..............",
				".#.........................#......A...............",
				"#.......#.#.......#..............#....D#....A.....",
				"...................#................6.#..........D",
				"............................#.....................",
				".......................#..#..d.#............#.....",
				"#..#.....4.e....#...............#..DT#B...........",
				".#......#.......#...d.....D..#...A...........B....",
				".............K...#......#............#............",
				"...........#.........#.....k..........#.....#.....",
				"...w....#.........4.............#.#.....y........#",
				"...#.#..w................#.....................#..",
				"....#........##..#....#....#....d..........y......",
				".....w..#..Q..#...........#.....#..#......T.......",
				"...............#......#...##...#..#....#...6..#...",
				"..#....#....#....#......##.......W.##T............",
				".....#.#........#..............#W..#......#.......",
				".#..........g....4e............###......W...#.....",
				".......1.................g......................#W",
				"...#....k...#.......#....#.##....#.#..#..0#....#..",
				".................a.#.....#.............#........#.",
				".................#..4#a.#..#...3.g..............7.",
				"..........#..m.............#.#..#.....I.0....#....",
				"..........#...K7.............##.........#.........",
				"....Q...#..#....#..........#........#I#..#........",
				"..9.#......b....##.....#..........I#...#..........",
				"...#.#..#.#...##.#.d...##......#..#####...........",
				".......e.....#.#....................#.....#......#",
				"....e.#..#......t.#E.#...#..#.#...#.3.............",
				".#....1..aQ....#...#....v...#.3#.........I..0.....",
				"......#...............#.#..v.t.....3.7............",
				".....#....i#......m....#...M..#........##.........",
				"...Q..29..a.#.......#.#.......m...#.......#.......",
				"...9...#..q.....#.#..mt...................#.....##",
				"....1..#....##..#...Y.#...M.........7........#....",
				".....#....b#.1...E.v..Y.#.........#......#........",
				".......#.......#v..#..#.#..q...#...........0#...#.",
				"......#......#....E......#...#......5.............",
				"9#..i..2b......#............#....#.#.....8........",
				"..#..q..2...#......#.Y..M.#...........##....#..#..",
				"..#..##..#.#q..........#....................V.....",
				"...i#.#.......#....##................V............",
				".i...#.........#E............M#..............#.#..",
				"........#...........#....................G#.......",
				"..##....#...8.........#......#.........#....#.....",
				"#........#........#.......8#......#......5........",
				"..........#......##...................5##..V......",
				".........#....#......#..#..........#........G.....",
				"...#.................................5...........G",
				"...............#.................8...#............",
			},
			num: 254,
		},
	}

	for _, tc := range testCases {
		t.Run(tc.name, func(t *testing.T) {
			theMap := CreateMap(tc.input)
			theMap.Filter(tc.useHarmonics)

			fmt.Println(theMap)
			if !theMap.IsSameAs(tc.expected) {
				t.Errorf("%v: expected different antinodes", tc.name)
			}

			if theMap.CountAntiNodes() != tc.num {
				t.Errorf("%v: expected %v but got %v", tc.name, tc.num, theMap.CountAntiNodes())
			}
		})
	}
}
